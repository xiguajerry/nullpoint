package me.nullpoint.mod.modules.impl.exploit;

import io.netty.buffer.Unpooled;
import me.nullpoint.api.events.eventbus.EventHandler;
import me.nullpoint.api.events.impl.PacketEvent;
import me.nullpoint.asm.accessors.IPlayerMoveC2SPacket;
import me.nullpoint.mod.modules.Module;
import me.nullpoint.mod.modules.settings.impl.BooleanSetting;
import net.minecraft.entity.Entity;
import net.minecraft.network.PacketByteBuf;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerInteractEntityC2SPacket;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;
import net.minecraft.network.packet.c2s.play.ClientCommandC2SPacket.Mode;
import org.jetbrains.annotations.NotNull;

public class AntiHunger extends Module {
   public static AntiHunger INSTANCE;
   public final BooleanSetting sprint = this.add(new BooleanSetting("Sprint", true));
   public final BooleanSetting ground = this.add(new BooleanSetting("Ground", true));

   public AntiHunger() {
      super("AntiHunger", "lol", Module.Category.Exploit);
      INSTANCE = this;
   }

   @EventHandler(
      priority = -100
   )
   public void onPacketSend(PacketEvent.Send event) {
      Packet var3 = event.getPacket();
      if (var3 instanceof ClientCommandC2SPacket packet) {
         if (this.sprint.getValue() && packet.getMode() == Mode.START_SPRINTING) {
            event.cancel();
         }
      }

      if (event.getPacket() instanceof PlayerMoveC2SPacket && this.ground.getValue() && mc.player.fallDistance <= 0.0F && !mc.interactionManager.isBreakingBlock()) {
         ((IPlayerMoveC2SPacket)event.getPacket()).setOnGround(false);
      }

   }

   public static Entity getEntity(@NotNull PlayerInteractEntityC2SPacket packet) {
      PacketByteBuf packetBuf = new PacketByteBuf(Unpooled.buffer());
      packet.write(packetBuf);
      return mc.world.getEntityById(packetBuf.readVarInt());
   }

   public static InteractType getInteractType(@NotNull PlayerInteractEntityC2SPacket packet) {
      PacketByteBuf packetBuf = new PacketByteBuf(Unpooled.buffer());
      packet.write(packetBuf);
      packetBuf.readVarInt();
      return packetBuf.readEnumConstant(InteractType.class);
   }

   public enum InteractType {
      INTERACT,
      ATTACK,
      INTERACT_AT;

      // $FF: synthetic method
      private static InteractType[] $values() {
         return new InteractType[]{INTERACT, ATTACK, INTERACT_AT};
      }
   }
}
