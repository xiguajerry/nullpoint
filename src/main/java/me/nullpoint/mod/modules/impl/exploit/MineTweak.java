package me.nullpoint.mod.modules.impl.exploit;

import me.nullpoint.api.utils.entity.InventoryUtil;
import me.nullpoint.mod.modules.Module;
import me.nullpoint.mod.modules.settings.impl.BooleanSetting;
import net.minecraft.item.Items;
import net.minecraft.item.PickaxeItem;
import net.minecraft.item.SwordItem;

public class MineTweak extends Module {
   public static MineTweak INSTANCE;
   public final BooleanSetting noEntityTrace = this.add((new BooleanSetting("NoEntityTrace", true)).setParent());
   public final BooleanSetting onlyPickaxe = this.add(new BooleanSetting("OnlyPickaxe", true, (v) -> {
      return this.noEntityTrace.isOpen();
   }));
   public final BooleanSetting multiTask = this.add(new BooleanSetting("MultiTask", true));
   private final BooleanSetting noAbort = this.add(new BooleanSetting("NoAbort", true));
   private final BooleanSetting noReset = this.add(new BooleanSetting("NoReset", true));
   private final BooleanSetting noDelay = this.add(new BooleanSetting("NoDelay", true));
   private final BooleanSetting pickaxeSwitch = this.add(new BooleanSetting("SwitchEat", true));
   public final BooleanSetting ghostHand = this.add(new BooleanSetting("GhostHand", true));
   boolean swapped = false;
   int lastSlot = 0;
   public boolean isActive;

   public MineTweak() {
      super("MineTweak", Module.Category.Exploit);
      INSTANCE = this;
   }

   public void onUpdate() {
      if (this.pickaxeSwitch.getValue()) {
         if (!(mc.player.getMainHandStack().getItem() instanceof PickaxeItem) && mc.player.getMainHandStack().getItem() != Items.ENCHANTED_GOLDEN_APPLE) {
            this.swapped = false;
            return;
         }

         int gapple = InventoryUtil.findItem(Items.ENCHANTED_GOLDEN_APPLE);
         if (gapple == -1) {
            if (this.swapped) {
               InventoryUtil.switchToSlot(this.lastSlot);
               this.swapped = false;
            }

            return;
         }

         if (mc.options.useKey.isPressed()) {
            if (mc.player.getMainHandStack().getItem() instanceof PickaxeItem && mc.player.getOffHandStack().getItem() != Items.ENCHANTED_GOLDEN_APPLE) {
               this.lastSlot = mc.player.getInventory().selectedSlot;
               InventoryUtil.switchToSlot(gapple);
               this.swapped = true;
            }
         } else if (this.swapped) {
            InventoryUtil.switchToSlot(this.lastSlot);
            this.swapped = false;
         }
      }

   }

   public void onDisable() {
      this.isActive = false;
   }

   public boolean noAbort() {
      return this.isOn() && this.noAbort.getValue() && !mc.options.useKey.isPressed();
   }

   public boolean noReset() {
      return this.isOn() && this.noReset.getValue();
   }

   public boolean noDelay() {
      return this.isOn() && this.noDelay.getValue();
   }

   public boolean multiTask() {
      return this.isOn() && this.multiTask.getValue();
   }

   public boolean noEntityTrace() {
      if (!this.isOff() && this.noEntityTrace.getValue()) {
         if (!this.onlyPickaxe.getValue()) {
            return true;
         } else {
            return mc.player.getMainHandStack().getItem() instanceof PickaxeItem || mc.player.isUsingItem() && !(mc.player.getMainHandStack().getItem() instanceof SwordItem);
         }
      } else {
         return false;
      }
   }

   public boolean ghostHand() {
      return this.isOn() && this.ghostHand.getValue() && !mc.options.useKey.isPressed() && !mc.options.sneakKey.isPressed();
   }
}
